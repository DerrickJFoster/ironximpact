{"version":3,"sources":["images/me.png","images/instagram.png","images/facebook.png","images/snapchat.png","images/amazon.png","components/header.js","components/home.js","components/video.js","components/about.js","components/contact.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","Fragment","className","react_router_dom","to","href","Component","Home","data-width","data-height","data-theme","data-link-color","data-chrome","src","instagram","facebook","snapchat","amazon","height","width","frameborder","scrolling","allowfullscreen","autoplay","id","Video","About","Me","Contact","type","name","placeholder","value","App","header","react_router","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4f47061c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/me.af11d6a6.png\";","module.exports = __webpack_public_path__ + \"static/media/instagram.751a308e.png\";","module.exports = __webpack_public_path__ + \"static/media/facebook.55ec8139.png\";","module.exports = __webpack_public_path__ + \"static/media/snapchat.6de2b97b.png\";","module.exports = __webpack_public_path__ + \"static/media/amazon.45b0e69a.png\";","import React, { Component } from 'react'\nimport { BrowserRouter as Router, Route } from \"react-router-dom\"\nimport { Link } from 'react-router-dom'\n\n\nclass Header extends Component {\n  render() {\n    return (\n      <>\n      <h1 className='banner'>IronxImpact</h1>\n\n      <ul>\n        <li><Link to='/'>Home</Link></li>\n        <li><Link to='/about'>About</Link></li>\n        <li><Link to='/livestream'>Livestream</Link></li>\n        <li><a href=\"https://twitter.com/IronxImpact\">Twitter</a></li>\n        <li><a href=\"https://www.twitch.tv/ironximpact\">Twitch</a></li>\n        <li className='contact'><Link to='/contact'>Contact</Link></li>\n      </ul>\n      </>\n    )\n  }\n}\n\nexport default Header;\n","import React, { Component } from 'react'\nimport '../App.css'\nimport Me from '../images/me.png'\nimport instagram from '../images/instagram.png'\nimport facebook from '../images/facebook.png'\nimport snapchat from '../images/snapchat.png'\nimport amazon from '../images/amazon.png'\n\nclass Home extends Component {\n  render() {\n    return (\n      <>\n      <div className='social-media'>\n        <h1 className='social'>Social Media</h1>\n\n          <a className=\"twitter-timeline\" data-width=\"400\" data-height=\"300\" data-theme=\"dark\" data-link-color=\"#981CEB\" href=\"https://twitter.com/IronxImpact?ref_src=twsrc%5Etfw\" data-chrome='noheader, nofooter'></a>\n\n          <div className='icons'>\n            <a href='http://www.instagram.com/IronxImpact'><img  className='insta' src={instagram} /></a>\n            <a href='#'><img  className='fb' src={facebook} /></a>\n            <a href='#'><img  className='snap' src={snapchat} /></a>\n            <a href=\"https://www.amazon.com/hz/wishlist/ls/1GB2CXB65NLXY?ref_=wl_share\"><img className='insta' src={amazon} /></a>\n          </div>\n      </div>\n\n      <iframe className='video'\n          src=\"https://player.twitch.tv/?channel=naomi&muted=true\"\n          height= '500'\n          width= '800'\n          frameborder= '0'\n          scrolling=\"no\"\n          allowfullscreen= 'true'\n          autoplay= 'no'>\n      </iframe>\n\n      <iframe className='chat'\n        frameborder=\"0\"\n        scrolling=\"yes\"\n        id=\"chat_embed\"\n        src=\"https://www.twitch.tv/embed/naomi/chat\"\n        height=\"500\"\n        width=\"300\">\n        </iframe>\n      </>\n    )\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react'\n\nclass Video extends Component {\n  render() {\n    return (\n      <>\n      <iframe className='video-page'\n          src=\"https://player.twitch.tv/?channel=naomi&muted=true\"\n          height= '500'\n          width= '800'\n          frameborder= '0'\n          scrolling=\"no\"\n          allowfullscreen= 'true'\n          autoplay= 'no'>\n      </iframe>\n\n      <iframe className='chat-page'\n        frameborder=\"0\"\n        scrolling=\"yes\"\n        id=\"chat_embed\"\n        src=\"https://www.twitch.tv/embed/naomi/chat\"\n        height=\"500\"\n        width=\"300\">\n        </iframe>\n    </>\n    )\n  }\n}\n\nexport default Video;\n","import React, { Component } from 'react'\nimport '../App.css'\nimport Me from '../images/me.png'\n\n\nclass About extends Component {\n  render() {\n    return (\n      <>\n      <div className='about-box'>\n      <h1 className='about'>About Me</h1>\n        <img id='profile' src={Me} />\n          <p>I am a small time variety streamer living in Denver Colorado. I am a Software Engineer/Web Developer and I like to game for fun in my spare time. I've always had a passion for electronics and video games which is what drove me to my career as well as twitch streaming as a hobby.\n      </p>\n      </div>\n      </>\n    )\n  }\n}\n\nexport default About;\n","import React, { Component } from 'react'\n\nclass Contact extends Component {\n  render() {\n    return (\n      <form>\n        <label>\n          <input type=\"text\" name=\"name\" placeholder='Name' />\n          <br/>\n          <input type=\"text\" name=\"email\" placeholder='Email' />\n        </label>\n        <br/>\n        <input type=\"submit\" value=\"Submit\" />\n      </form>    )\n  }\n}\n\nexport default Contact;\n","import React, { Component } from 'react'\nimport { BrowserRouter as Router, Route } from \"react-router-dom\"\n\n// ROUTES\nimport Header from './components/header'\nimport Home from './components/home'\nimport Video from './components/video'\nimport About from './components/about'\nimport Contact from'./components/contact'\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n      <Header />\n        <Route path='/' exact component={Home} />\n        <Route path='/about' component={About} />\n        <Route path='/livestream' component={Video} />\n        <Route path='/contact' component={Contact} />\n\n      </Router>\n    )\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}